{
  "hash": "640a4aac2e73c9511c61b52ae1f13d1a",
  "result": {
    "markdown": "---\ntitle: \"Testing drafts\"\ndraft: true\n---\n\n\n::: callout-warning\n-   Currently it works by saving the list directly in excel so that you get the list names as sheet. Then you load saved excel as wb object to apply styling. Idealy you should find a way to include dataframes programatically like this\\\n    `wb <- wb_workbook() %>% wb_add_worksheet(sheet = \"test1\") %>% wb_add_data(x = mtcars)`if this doesnt work check to do it with `imap` where `y` will be the name\n\n-   currently it also lacks programatic way to check number of columns to apply styling to.\n\nPerhaps `imap` would solve both problems\n:::\n\nWhen drafting a figure you collect data which should be reported as supplementary tables in publication. Some journals require to report supplementary table in .xlsx format. The code bellow demonstrates how to do that programatically with R. In particular, it shows how to save a named list of dataframes as in .xlsx format where each dataframe will be saved as separate sheet named according to its name in list.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrenv::use(lockfile = \"renv.lock\", verbose = FALSE)\n```\n:::\n\n\nCreate a named list\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(openxlsx2)\ntmp_list <- list(df1 = mtcars, df2 = mtcars, df3 = mtcars)\nmap(tmp_list, head)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$df1\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\n$df2\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\n$df3\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n```\n:::\n:::\n\n\nSave files in xlsx.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmp_path <- tempfile(fileext = \".xlsx\")\nwrite_xlsx(tmp_list, tmp_path)\n```\n:::\n\n\n::: callout-note\nThis excel file file have sheets named df1,df2,df3\n:::\n\nApply styling to excel file programtically\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwb_exc <- wb_load(tmp_path)\nmap(wb_exc$sheet_names, \\(x) {\n  wb_exc <<-  wb_exc %>% wb_set_col_widths(cols = 1:12, widths = \"auto\")\n})\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\nA Workbook object.\n \nWorksheets:\n Sheets: df1, df2, df3 \n Write order: 1, 2, 3\n[[2]]\nA Workbook object.\n \nWorksheets:\n Sheets: df1, df2, df3 \n Write order: 1, 2, 3\n[[3]]\nA Workbook object.\n \nWorksheets:\n Sheets: df1, df2, df3 \n Write order: 1, 2, 3\n```\n:::\n\n```{.r .cell-code}\nwb_save(wb = wb_exc, file = tmp_path)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}