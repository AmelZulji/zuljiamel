---
author: Amel Zulji
title: "HDF5 files in R"
description: "Working with HDF5 files in R"
date: 2023.02.02
image: hdf5_structure4.jpg
categories:
  - file
draft: true
---

# Introduction

HDF5 (Hierarchical Data Format v5) is a binary file format designed for efficient storage and fast access to large, structured datasets. Its binary nature ensures compact size and high read/write speed, making it ideal for data-intensive applications. HDF5 supports a hierarchical layout (like folders and files) and is well-suited for storing complex objects such as expression matrices its column- and rownames, metadata etc etc. Itâ€™s supported in many programming languages, making it highly suitable for interoperable, transferable workflows across platforms and tools.

To demonstrate how one can work with HDF5 in R, the {hdf5r} package will be used to write and read HDF5 files.

# Simulating Example Data

First, we simulate a small gene expression matrix and some associated metadata.

```{r}
#| echo: false
renv::use(lockfile = "renv.lock", verbose = FALSE)
```

```{r}
suppressPackageStartupMessages({
  library(hdf5r)
  library(tibble)
})

n_col <- 20
col_name <- paste0("cell", 1:n_col)
n_row <- 15
row_name <- paste0("gene", 1:n_row)
counts <- matrix(rnorm(n_col * n_row), nrow = n_row, ncol = n_col, dimnames = list(row_name, col_name))
counts[1:5,1:5]
```

```{r}
metadata <- tibble(barcode = col_name, metric = sample(letters, size = n_col))
head(metadata)
```

```{r}
filename <- "seu_obj.h5"
fileh5 <- H5File$new(filename, mode = "w")

fileh5$create_group(name = c("count_matrix"))
fileh5[["count_matrix"]]$create_dataset(name = "counts", robj = counts)
fileh5[["count_matrix"]]$create_dataset(name = "counts_colnames", robj = col_name)
fileh5[["count_matrix"]]$create_dataset(name = "counts_rownames", robj = row_name)

fileh5$create_group(name = c("cell_metadata"))
fileh5[["cell_metadata"]]$create_dataset(name = "metadata", robj = metadata)
fileh5[["cell_metadata"]]$create_dataset(name = "metadata_colnames", robj = colnames(metadata))
fileh5[["cell_metadata"]]$create_dataset(name = "metadata_rownames", robj = rownames(metadata))

fileh5$close_all()

seu_obj_data <- H5File$new(filename = "seu_obj.h5", mode = "r")
counts <- seu_obj_data[["count_matrix"]][["counts"]]
rownames <- seu_obj_data[["count_matrix"]][["counts_rownames"]]
colnames <- seu_obj_data[["count_matrix"]][["counts_colnames"]]

mat <- counts$read()
rownames(mat) <- rownames$read()
colnames(mat) <- colnames$read()

mat[1:5,1:5]

```

```{r}
file.remove("seu_obj.h5")
```
